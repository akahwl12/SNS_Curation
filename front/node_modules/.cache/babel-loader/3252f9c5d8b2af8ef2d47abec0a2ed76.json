{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\views\\user\\FindPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\views\\user\\FindPassword.vue","mtime":1579662873700},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgJy4uLy4uL2Fzc2V0cy9jc3Mvc3R5bGUuc2Nzcyc7CmltcG9ydCAnLi4vLi4vYXNzZXRzL2Nzcy91c2VyLnNjc3MnOwppbXBvcnQgKiBhcyBFbWFpbFZhbGlkYXRvciBmcm9tICdlbWFpbC12YWxpZGF0b3InOwppbXBvcnQgVXNlckFwaSBmcm9tICcuLi8uLi9hcGlzL1VzZXJBcGknOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtYWlsOiAnJywKICAgICAgZXJyb3I6IHsKICAgICAgICBlbWFpbDogZmFsc2UKICAgICAgfSwKICAgICAgaXNTdWJtaXQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuZW1haWwgIT0gbnVsbCkgewogICAgICB0aGlzLmVtYWlsID0gdGhpcy4kcm91dGUucGFyYW1zLmVtYWlsOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGVtYWlsOiBmdW5jdGlvbiBlbWFpbCh2KSB7CiAgICAgIHRoaXMuY2hlY2tGb3JtKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja0Zvcm06IGZ1bmN0aW9uIGNoZWNrRm9ybSgpIHsKICAgICAgaWYgKHRoaXMuZW1haWwubGVuZ3RoID49IDEgJiYgIUVtYWlsVmFsaWRhdG9yLnZhbGlkYXRlKHRoaXMuZW1haWwpKSB0aGlzLmVycm9yLmVtYWlsID0gIuydtOuplOydvCDtmJXsi53snbQg7JWE64uZ64uI64ukLiI7ZWxzZSBpZiAodGhpcy5lbWFpbCA9PT0gJycpIHRoaXMuZXJyb3IuZW1haWwgPSAi7J2066mU7J287J2EIOyeheugpe2VtOyjvOyEuOyalCEiO2Vsc2UgdGhpcy5lcnJvci5lbWFpbCA9IGZhbHNlOwogICAgICB2YXIgaXNTdWJtaXQgPSB0cnVlOwogICAgICBPYmplY3QudmFsdWVzKHRoaXMuZXJyb3IpLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIGlmICh2KSBpc1N1Ym1pdCA9IGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy5pc1N1Ym1pdCA9IGlzU3VibWl0OwogICAgfSwKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuaXNTdWJtaXQpIHsKICAgICAgICAvL+yalOyyrSDtm4Tsl5DripQg67KE7Yq8IOu5hO2ZnOyEse2ZlAogICAgICAgIHRoaXMuaXNTdWJtaXQgPSBmYWxzZTsKICAgICAgICBVc2VyQXBpLnJlcXVlc3RGaW5kUGFzc3dvcmQodGhpcy5lbWFpbCwgZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgaWYgKHJlcyA9PSAnc3VjY2VzcycpIHsKICAgICAgICAgICAgdmFyIHJvdXRlciA9IF90aGlzLiRyb3V0ZXI7CiAgICAgICAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICBuYW1lOiAiRmluZFBhc3N3b3JkU2VuZEVtYWlsIiwKICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICJuaWNrTmFtZSI6IF90aGlzLm5pY2tOYW1lLAogICAgICAgICAgICAgICAgImVtYWlsIjogX3RoaXMuZW1haWwsCiAgICAgICAgICAgICAgICAicGFzc3dvcmQiOiBfdGhpcy5wYXNzd29yZAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGVydCgi7KG07J6s7ZWY7KeAIOyViuuKlCDsnbTrqZTsnbzsnoXri4jri6QiKTsKICAgICAgICAgIH0gLy/thrXsi6DsnYQg7Ya17ZW0IOyghOuLrOuwm+ydgCDqsJIg7L2Y7IaU7JeQIOy2nOugpSBjb25zb2xlLmxvZyhyZXMpOyDsmpTssq3snbQg64Gd64KY66m0IOuyhO2KvCDtmZzshLHtmZQKCgogICAgICAgICAgX3RoaXMuaXNTdWJtaXQgPSB0cnVlOwogICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgLy/smpTssq3snbQg64Gd64KY66m0IOuyhO2KvCDtmZzshLHtmZQKICAgICAgICAgIHZhciByb3V0ZXIgPSBfdGhpcy4kcm91dGVyOwogICAgICAgICAgcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAiRXJyb3JQYWdlIiwKICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgImVtYWlsIjogX3RoaXMuZW1haWwsCiAgICAgICAgICAgICAgInJvdXRlIjogX3RoaXMuJHJvdXRlLm5hbWUKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["FindPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,6BAAA;AACA,OAAA,4BAAA;AACA,OAAA,KAAA,cAAA,MAAA,iBAAA;AACA,OAAA,OAAA,MAAA,oBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAFA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GATA;AAUA,EAAA,OAVA,qBAUA;AAEA,QAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA,WAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAEA,GAhBA;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,eAAA,CAAA,EAAA;AACA,WAAA,SAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,QAAA,CAAA,KAAA,KAAA,CAAA,EACA,KAAA,KAAA,CAAA,KAAA,GAAA,eAAA,CADA,KAEA,IAAA,KAAA,KAAA,KAAA,EAAA,EACA,KAAA,KAAA,CAAA,KAAA,GAAA,cAAA,CADA,KAGA,KAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AAEA,UAAA,QAAA,GAAA,IAAA;AAEA,MAAA,MAAA,CACA,MADA,CACA,KAAA,KADA,EAEA,GAFA,CAEA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,EACA,QAAA,GAAA,KAAA;AACA,OALA;AAOA,WAAA,QAAA,GAAA,QAAA;AACA,KAnBA;AAoBA,IAAA,MApBA,oBAoBA;AAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,QAAA,OAAA,CAAA,mBAAA,CAAA,KAAA,KAAA,EAAA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,IAAA,SAAA,EAAA;AACA,gBAAA,MAAA,GAAA,KAAA,CAAA,OAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA;AACA,cAAA,IAAA,EAAA,uBADA;AAEA,cAAA,MAAA,EAAA;AACA,4BAAA,KAAA,CAAA,QADA;AAEA,yBAAA,KAAA,CAAA,KAFA;AAGA,4BAAA,KAAA,CAAA;AAHA;AAFA,aAAA;AAQA,WAVA,MAUA;AACA,YAAA,KAAA,CAAA,gBAAA,CAAA;AACA,WAbA,CAcA;;;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,SAhBA,EAgBA,UAAA,KAAA,EAAA;AACA;AACA,cAAA,MAAA,GAAA,KAAA,CAAA,OAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,WADA;AAEA,YAAA,MAAA,EAAA;AACA,uBAAA,KAAA,CAAA,KADA;AAEA,uBAAA,KAAA,CAAA,MAAA,CAAA;AAFA;AAFA,WAAA;AAOA,SA1BA;AA2BA;AACA;AApDA;AAtBA,CAAA","sourcesContent":["<template>\r\n    <div class=\"user\" id=\"login\">\r\n        <div class=\"wrapC\">\r\n            <h1>가입하신 이메일을 입력해주세요</h1>\r\n            <h1>이메일로 임시 비밀번호를 발송해드립니다</h1>\r\n            <br/>\r\n            <div class=\"input-with-label\">\r\n                <input\r\n                    v-model=\"email\"\r\n                    v-bind:class=\"{error : error.email, complete:!error.email&&email.length!==0}\"\r\n                    @keyup.enter=\"submit\"\r\n                    id=\"email\"\r\n                    placeholder=\"이메일 주소 입력\"\r\n                    type=\"text\"/>\r\n                <label for=\"email\">이메일</label>\r\n                <div class=\"error-text\" v-if=\"error.email\">\r\n                    {{error.email}}\r\n                </div>\r\n            </div>\r\n            <br/><br/><br/>\r\n            <div class=\"btn_wrap\">\r\n                <button\r\n                    class=\"btn btn--back btn--ok\"\r\n                    v-on:click=\"submit\"\r\n                    :disabled=\"!isSubmit\"\r\n                    :class=\"{disabled : !isSubmit}\">\r\n                    임시 비밀번호 발송\r\n                </button>\r\n                <router-link v-bind:to=\"{name:'Login'}\">\r\n                    <button class=\"btn btn--cancel\">\r\n                        취소\r\n                    </button>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import '../../assets/css/style.scss'\r\n    import '../../assets/css/user.scss'\r\n    import * as EmailValidator from 'email-validator';\r\n    import UserApi from '../../apis/UserApi'\r\n    import axios from \"axios\"\r\n\r\n    export default {\r\n        data: () => {\r\n            return {\r\n                email: '',\r\n                error: {\r\n                    email: false\r\n                },\r\n                isSubmit: false\r\n            }\r\n        },\r\n        created() {\r\n\r\n            if (this.$route.params.email != null) {\r\n                this.email = this.$route.params.email;\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            email: function (v) {\r\n                this.checkForm();\r\n            }\r\n        },\r\n        methods: {\r\n            checkForm() {\r\n                if (this.email.length >= 1 && !EmailValidator.validate(this.email)) \r\n                    this.error.email = \"이메일 형식이 아닙니다.\"\r\n                else if (this.email === '') \r\n                    this.error.email = \"이메일을 입력해주세요!\"\r\n                else \r\n                    this.error.email = false;\r\n                \r\n                let isSubmit = true;\r\n\r\n                Object\r\n                    .values(this.error)\r\n                    .map(v => {\r\n                        if (v) \r\n                            isSubmit = false;\r\n                        }\r\n                    )\r\n                this.isSubmit = isSubmit;\r\n            },\r\n            submit() {\r\n                if (this.isSubmit) {\r\n                    //요청 후에는 버튼 비활성화\r\n                    this.isSubmit = false;\r\n                    UserApi.requestFindPassword(this.email, res => {\r\n                        if (res == 'success') {\r\n                            var router = this.$router;\r\n                            router.push({\r\n                                name: \"FindPasswordSendEmail\",\r\n                                params: {\r\n                                    \"nickName\": this.nickName,\r\n                                    \"email\": this.email,\r\n                                    \"password\": this.password\r\n                                }\r\n                            });\r\n                        } else {\r\n                            alert(\"존재하지 않는 이메일입니다\");\r\n                        }\r\n                        //통신을 통해 전달받은 값 콘솔에 출력 console.log(res); 요청이 끝나면 버튼 활성화\r\n                        this.isSubmit = true;\r\n                    }, error => {\r\n                        //요청이 끝나면 버튼 활성화\r\n                        var router = this.$router;\r\n                        router.push({\r\n                            name: \"ErrorPage\",\r\n                            params: {\r\n                                \"email\": this.email,\r\n                                \"route\": this.$route.name\r\n                            }\r\n                        });\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n</script>"],"sourceRoot":"src/views/user"}]}