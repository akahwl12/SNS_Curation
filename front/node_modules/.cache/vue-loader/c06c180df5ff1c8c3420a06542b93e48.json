{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\components\\common\\UserFeed.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\components\\common\\UserFeed.vue","mtime":1581044323456},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KcCB7DQoNCiAgICBtYXJnaW4tbGVmdDo1cHg7DQogICAgY29sb3I6IGdyYXk7DQogICAgZm9udC1zaXplOjEycHg7DQp9DQo="},{"version":3,"sources":["UserFeed.vue"],"names":[],"mappingsgjBA;;AAEA;AACA;AACA;AACA","file":"UserFeed.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\r\n    <div class=\"wrapC\">\r\n        <div class=\"wrapper\">\r\n            <div class=\"profile-card js-profile-card\">\r\n                <div class=\"profile-card__cnt js-profile-cnt\">\r\n                    <img src=\"../../assets/images/profile_default.png\" style=\"margin-bottom:10px;\">\r\n                        <div class=\"profile-card__name\">{{nickname}}</div>\r\n                        <div class=\"profile-card__txt\">{{intro}}</div>\r\n\r\n                        <div class=\"profile-card-ctr\" v-if=\"isfollow==0\">\r\n\r\n                            <button class=\"profile-card__button button--orange\" @click=\"followgo()\">Follow</button>\r\n                        </div>\r\n                        <div class=\"profile-card-ctr\" v-if=\"isfollow==1\">\r\n\r\n                            <button class=\"profile-card__button button--gray\" @click=\"unfollowgo()\">UnFollow</button>\r\n                        </div>\r\n\r\n                        <div class=\"profile-card-inf\">\r\n                            <div class=\"profile-card-inf__item\">\r\n                                <div class=\"profile-card-inf__title\">{{follower}}</div>\r\n                                <div class=\"profile-card-inf__txt\">Followers</div>\r\n                            </div>\r\n\r\n                        <div class=\"profile-card-inf__item\">\r\n                            <div class=\"profile-card-inf__title\">{{following}}</div>\r\n                            <div class=\"profile-card-inf__txt\">Following</div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n\r\n            <hr>\r\n            <div v-if=\"auth==1 && isfollow==0\" style=\"margin-top:20px; text-align:center\">\r\n                비공개 계정입니다.\r\n            </div>\r\n            <div v-if=\"auth==0 || (auth==1 && isfollow==1)\">\r\n                <div v-if=\"!post\" style=\"margin-top:20px; text-align:center\"> 게시물이 없습니다.</div>\r\n                  <div v-for=\"(item,index) in post\" v-bind:key=\"item.num\">\r\n                    <v-card\r\n                            max-width=\"100%\"\r\n                            class=\"mx-auto\"\r\n                            style=\"margin-bottom:100px\"\r\n                    >\r\n                    <v-list-item>\r\n                        <v-list-item-avatar><img src=\"../../assets/images/profile_default.png\"></v-list-item-avatar>\r\n                        <v-list-item-content style=\"padding-left:5%\">\r\n                        <v-list-item-title class=\"headline\">{{item.title}}</v-list-item-title>\r\n                        <v-list-item-subtitle style=\"width:50px\">{{nickname}} <div style=\"float:right\"> {{getTime(item.date)}}</div> </v-list-item-subtitle>\r\n                        <!-- <v-list-item-subtitle>{{getTime(item.date)}}</v-list-item-subtitle> -->\r\n                        </v-list-item-content>\r\n                        </v-list-item>\r\n                            <v-col cols=\"12\" sm=\"3\">\r\n                                <div v-for=\"star in item.count_star\" :key=\"star.num\">\r\n                                    <v-icon style=\"color:red; float : left\">mdi-star</v-icon>\r\n                                </div>\r\n                                <div v-for=\"star in (5-item.count_star)\" :key=\"star.num\">\r\n                                    <v-icon style=\"float : left\">mdi-star</v-icon>\r\n                                </div>\r\n                            </v-col>\r\n                            <br>\r\n                            <v-card-text>\r\n                                {{item.content}}\r\n                            <br><br><hr><br>\r\n                            주소 : {{item.address}} \r\n                            </v-card-text>\r\n                            <hr>\r\n                        <v-spacer></v-spacer>\r\n\r\n                    <div style=\"width:100%\">\r\n                    <div style=\"margin-bottom:10px; margin-top:10px; padding-left:5px\">\r\n                        <div style=\"width:33%; float:left;\">\r\n\r\n                        <button class=\"animated rubberBand\" v-if=\"like[index]===true\" @click=\"toggledelete(item.num, index)\"><img style=\"width:30px; margin-left:10px; margin-bottom:5px\" src=\"../../assets/images/likefill.png\"></button>\r\n                        <button v-if=\"like[index]===false\" @click=\"toggleadd(item.num, index)\"><img class=\"animated rubberBand\" style=\"width:30px; margin-left:10px; margin-bottom:5px\" src=\"../../assets/images/like.png\"></button>\r\n                        </div>\r\n                        <div style=\"width:33%; float:left; text-align:center; margin-top:3px\">\r\n\r\n                        <button @click=\"commentview(item.num, index)\"><img style=\"width:26px; margin-bottom:5px\" src=\"../../assets/images/comment.png\"></button>\r\n                        </div>\r\n                        <div style=\"width:33%; float:left; text-align:right; padding-right:10px; ; margin-top:3px\">\r\n                        <button><img style=\"width:26px; margin-bottom:5px\" src=\"../../assets/images/share.png\"></button>\r\n\r\n                        </div>\r\n                        <br>\r\n                    </div>\r\n                    <br>\r\n                  \r\n                        <div v-if=\"like[index]===true\">\r\n                            <p v-if=\"likelist[index] === 1\">\r\n                                {{nick}}님<span>이 좋아합니다.</span>\r\n                            </p>\r\n                            <p v-else>\r\n                                {{nick}}님 외  {{ likelist[index] - 1 }} 명이 좋아합니다\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div v-if=\"like[index]===false\">\r\n                            <p>\r\n                                {{ likelist[index] }} 명이 좋아합니다\r\n                            </p>\r\n                        </div>\r\n\r\n                        <p>\r\n                            {{ item.count_comment }} 개의 댓글이 있습니다.\r\n                        </p>\r\n\r\n                        <div v-if=\"coment[index]===true\">\r\n                            <div v-for=\"cmt in todolist\" v-bind:key=\"cmt.date\" >\r\n                                <div v-if=\"cmt[0].num==item.num\">\r\n                                    <div style=\"margin-bottom:5px\" v-for=\"cmts in cmt\" v-bind:key=\"cmts.date\" >\r\n                                        <h5 style=\"float:left; margin-left:5px; margin-right:20px; font-weight:bold;\"> {{ cmts.nickname }}</h5> &nbsp; \r\n                                        <h5 style=\"float:left; \">{{ cmts.comment }} \r\n                                        </h5>\r\n                                        <span style=\"float:right; margin-right:20px; font-weight:lighter; color:red\" v-if=\"cmts.author==mynum || item.author == mynum\" @click=\"removeComent(item.num,cmts,index)\">X</span>\r\n                                        <br>\r\n                                    </div>                \r\n                                </div>\r\n                            </div>\r\n                  \r\n                            <div style=\"width:30%; float:right; margin-right:5px; margin-top:17px\">\r\n                                <button style=\"height:30px;\" class=\"comment-ok\" @click=\"addcomment(item.num,index)\"\r\n                                :disabled=\"!isSubmit\"\r\n                                :class=\"{disabled : !isSubmit}\"\r\n                                >댓글달기</button>\r\n                            </div>\r\n                            <div style=\"margin-left:5px; width:60%;\">\r\n                                <v-text-field style=\"color:blue; width:90%\" label=\"댓글입력\" v-model=\"newcomment\" id=\"newcomment\" hide-details=\"auto\">\r\n                                </v-text-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    </v-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import Vue from 'vue'\r\n    import moment from 'moment'\r\n    import VueMomentJS from 'vue-momentjs'\r\n    import '../../assets/css/style.scss'\r\n    import '../../assets/css/user.scss'\r\n    import '../../assets/css/profile.scss'\r\n    import {mapState} from 'vuex';\r\n    import UserApi from '../../apis/UserApi'\r\n    import Axios from 'axios'\r\n    import http from '../../../http-common'\r\n    import NavigationBar from '../../components/common/NavigationBar'\r\n    import {fireDB} from '../../main'\r\n    \r\n\r\n    export default {\r\n        name: 'App',\r\n        props:['propsNickname'],\r\n        created () {\r\n            if(this.$store.state.userinfo!=null) {\r\n                this.myEmail = this.$store.state.userinfo.email\r\n                this.nick = this.$store.state.userinfo.nickName\r\n\r\n                 http.get(\"/user/userinfo/{nickname}?nickname=\"+this.nick)\r\n                .then(Response => {\r\n                    this.mynum = Response.data.num;\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            }\r\n\r\n            this.nickname = this.propsNickname;\r\n\r\n            //포스트 불러오기\r\n            this.getUserByNickname(this.nickname);\r\n\r\n            //검색한 사용자와 팔로잉 체크\r\n            this.followcheck(this.nickname);\r\n        },\r\n        watch : {\r\n            newcomment: function(v) {\r\n                this.checkForm();\r\n            }\r\n        },\r\n        computed : {\r\n            ...mapState(['userinfo']),\r\n        },\r\n        methods: {\r\n            checkForm() {\r\n                if (this.newcomment.length < 1)\r\n                    this.error.newcomment = '1자이상'\r\n                else\r\n                    this.error.newcomment = false\r\n                \r\n                let isSubmit = true\r\n                Object\r\n                .values(this.error)\r\n                .map(v => {\r\n                    if (v) \r\n                        isSubmit = false;\r\n                    }\r\n                )\r\n                this.isSubmit = isSubmit;\r\n            },\r\n            getTime(time) {\r\n                return moment(time).fromNow();\r\n            },\r\n             getUserByNickname(nick) {\r\n                let form = new FormData()\r\n                form.append('nickname', nick)\r\n                http.get(\"/user/userinfo/{nickname}?nickname=\"+nick)\r\n                .then(Response => {\r\n               \r\n                    this.num = Response.data.num;\r\n                    this.intro = Response.data.intro;\r\n                    this.email = Response.data.email;\r\n                    this.auth = Response.data.auth;\r\n                \r\n                    //팔로잉 내역 불러오기\r\n                    this.getFollowing(this.email);\r\n                    //팔로워 내역 불러오기\r\n                    this.getFollower(this.email);\r\n                    //검색한 사용자의 피드 다불러오기\r\n                    this.getPostByNum(this.num);\r\n                    //this.getAlarmFromFirebase();\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n             getFollower() { //팔로우 정보가져오기\r\n                let form = new FormData()\r\n                http.get(\"/follow/follower?email=\"+this.email)\r\n                .then(Response => {\r\n                this.follower = Response.data;\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            getFollowing() { //팔로잉정보가져오기\r\n                let form = new FormData()\r\n                http.get(\"/follow/following?email=\"+this.email)\r\n                .then(Response => {\r\n                this.following = Response.data;\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            getPostByNum(num) { //포스트가져오기\r\n                let form = new FormData()\r\n                form.append('num', num)\r\n\r\n                http.get(\"/post/post/{num}?num=\"+num + '&email=' + this.$store.state.userinfo.email)\r\n                .then(Response => {\r\n                   \r\n                    this.post = Response.data.object; \r\n                    \r\n                    //좋아요와 댓글 토글용 배열 생성\r\n                    for (let index = 0; index < this.post.length; index++) {\r\n                        if(this.post[index].islike==1){\r\n                            this.like.push(true)\r\n                        }else{\r\n                            this.like.push(false)\r\n                        }\r\n                        this.likelist.push(this.post[index].count_like);\r\n                        this.coment.push(false)\r\n                        \r\n                    }\r\n                   \r\n            \r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            followcheck(nick) { //보는 유저와 팔로우 되어 있는지 확인하기\r\n                let myn  = this.$store.state.userinfo.nickName;\r\n \r\n                http.get(\"/follow/follow?mynickname=\" + myn + \"&nickname=\" + nick)\r\n                .then(Response => {\r\n                    if(Response.data==0){\r\n                       \r\n                        this.isfollow = 0;\r\n                    }else if(Response.data==1){\r\n                       \r\n                        this.isfollow = 1;\r\n                        \r\n                    }else{\r\n                        this.isfollow = -1;\r\n                          //내가 나의 정보를 검색할때\r\n                        if(this.nick==this.nickname){\r\n                            this.isfollow=1;\r\n                         }\r\n                    }\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            unfollowgo(){ //팔로우해제하기\r\n                let form = new FormData()\r\n                let myn  = this.$store.state.userinfo.nickName;\r\n                form.append('mynickname', myn)\r\n                form.append('nickname',this.nickname)\r\n                http.post(\"/follow/unFollow\", form)\r\n                .then(Response => {\r\n                    this.isfollow = 0;\r\n                    this.getFollower();\r\n                    this.getFollowing();\r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            followgo(){ //팔로우신청하기\r\n                if(this.auth==0) {\r\n                    let form = new FormData();\r\n                    let myn  = this.$store.state.userinfo.nickName;\r\n                    form.append('mynickname', myn)\r\n                    form.append('nickname',this.nickname)\r\n                    http.post(\"/follow/follow\", form)\r\n                    .then(Response => {\r\n                        this.isfollow = 1;\r\n                        this.getFollower();\r\n                        this.getFollowing();\r\n                        this.updateAlarmToFirebase();\r\n                    })\r\n                    .catch(Error => {\r\n                        console.log(Error)\r\n                    })\r\n                }\r\n                else if(this.auth==1) {\r\n                    let form = new FormData();\r\n                    let myn  = this.$store.state.userinfo.nickName;\r\n                    form.append('mynickname', myn)\r\n                    form.append('nickname',this.nickname)\r\n                    \r\n                    http.post(\"/follow/nonfollow\", form)\r\n                    .then(Response => {\r\n                        console.log(Response)\r\n                        if(Response.data==='success') {\r\n                            this.updateAlarmToFirebase();\r\n                            alert(\"팔로우가 요청되었습니다.\")\r\n                        }\r\n                        else if(Response.data==='failed') {\r\n                            alert(\"이미 팔로우 신청을 하였습니다.\")\r\n                        }\r\n                    })\r\n                    .catch(Error => {\r\n                        console.log(Error)\r\n                    })\r\n\r\n                }\r\n            },\r\n            toggleadd(num, index) { //좋아요를 클릭할때\r\n               this.likelist[index]++;\r\n               this.$set(this.like,index,!this.like[index])\r\n                \r\n                //좋아요 서버로 전송하기\r\n                let form = new FormData()\r\n                form.append('postnum', num)\r\n                form.append('email', this.$store.state.userinfo.email)\r\n\r\n                http.post('/postlike/like',form)\r\n                .then(response => {\r\n                     this.post = response.data.object; \r\n                     \r\n                })\r\n                .catch(Error => {\r\n                     console.log(Error)\r\n                })\r\n            },\r\n            toggledelete(num, index) { //좋아요를 해제할때\r\n                this.likelist[index]--;\r\n                this.$set(this.like,index,!this.like[index])\r\n\r\n                http.delete(\"/postlike/unlike?postnum=\"+num + '&email=' + this.$store.state.userinfo.email)\r\n                .then(response => {\r\n                     this.post = response.data.object\r\n                     \r\n                })\r\n                .catch(Error => {\r\n                     console.log(Error)\r\n                })\r\n            },\r\n            commentview(num,index){ //댓글 버튼 누를 때\r\n            this.todolist = [];\r\n            //댓글 불러오기\r\n            if(this.coment[index]==false){\r\n                    http.get('/comment/comment?num='+num)\r\n                .then(response => {\r\n                    if(response.data.object!=null){\r\n                        this.todolist.push(response.data.object)\r\n                    } \r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n\r\n            //댓글 숨기기\r\n            }else if(this.coment[index]==true){\r\n                    for (let index = 0; index < this.todolist.length; index++) {\r\n                        if(this.todolist[index][0].num==num){\r\n                            this.$delete(this.todolist,index);\r\n                        }   \r\n                    }\r\n                }\r\n\r\n                this.$set(this.coment,index,!this.coment[index])\r\n            }\r\n            ,\r\n            addcomment(num,index) {\r\n                \r\n                let form = new FormData()\r\n                form.append('comment', this.newcomment)\r\n                form.append('email', this.$store.state.userinfo.email)\r\n                form.append('num', num)\r\n                http.post(\"/comment/comment\", form)\r\n                .then(response => {\r\n                   \r\n                    //댓글 재등록\r\n                    this.commentview(num, index);\r\n                    this.commentview(num, index);\r\n                   \r\n                    //댓글 초기화\r\n                    this.newcomment=''\r\n\r\n                    //댓글 수 갱신하기\r\n                    this.refresh();\r\n\r\n                })\r\n\r\n            },\r\n            refresh(){ //댓글 수 갱신하기\r\n\r\n                http.get(\"/post/post/{num}?num=\"+this.num + '&email=' + this.$store.state.userinfo.email)\r\n                .then(Response => {\r\n                   \r\n                    this.post = Response.data.object; \r\n    \r\n            \r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n            },\r\n            removeComent(num, cmt, index){\r\n                \r\n                http.delete(\"/comment/comment?num=\" + cmt.num + \"&nickname=\" + cmt.nickname + \"&date=\" + cmt.date)\r\n                .then(response => {\r\n\r\n                    //삭제 완료시 댓글창, 댓글수 바로 갱신\r\n     \r\n                    this.commentview(num, index);\r\n                    this.commentview(num, index);\r\n                \r\n\r\n                    this.refresh();\r\n                    \r\n                })\r\n                .catch(Error =>{\r\n                })\r\n            },\r\n\r\n            //밑은 알람 메소드\r\n            setAlarm(alarm) {\r\n                this.userAlarmCount = alarm;\r\n            },\r\n            updateAlarmToFirebase() {\r\n                console.log(this.email + \":\" + this.userAlarmCount)\r\n                fireDB.collection('Alarm').doc(this.email)\r\n                .set({\r\n                    count : this.userAlarmCount + 1\r\n                })\r\n            },\r\n            getAlarmFromFirebase() {\r\n                let whoami = this;\r\n                let count = 0;\r\n                fireDB.collection('Alarm').doc(this.email).get().then(function(doc) {\r\n                if(doc.data()==undefined) {\r\n                    count = 0;\r\n                } else {\r\n                    count = doc.data().count;\r\n                }\r\n                whoami.setAlarm(count);\r\n                }).catch(function(error) {\r\n                    console.log(error)\r\n                })\r\n            },\r\n            watchAlarmFromFirebase() {\r\n                let whoami = this;\r\n                let count=0;\r\n                fireDB.collection('Alarm').doc(this.email).onSnapshot( {\r\n                    includeMetadataChanges: true    \r\n                },function(doc) {\r\n                    if(doc.data()==undefined) {\r\n                        count = 0;\r\n                    } else {\r\n                        count = doc.data().count;\r\n                    }\r\n                    whoami.setAlarm(count);\r\n                })\r\n            },\r\n            togglecomment(num) {\r\n                this.commenttoggle = !this.commenttoggle\r\n                http.get(\"/comment/comment?num=\" + num)\r\n                .then(response => {\r\n                    this.comment = response.data.object\r\n                    // for(this.i=0; this.i< this.comment.length; this.i++){\r\n                    //     if (this.comment[this.i].num==num){\r\n                    //         alert('asd')\r\n                    //         this.comments.push(this.comment[this.i].comment)\r\n                    //     }\r\n                    // }\r\n                    \r\n                })\r\n                .catch(Error => {\r\n                    console.log(Error)\r\n                })\r\n                alert(\"댓글이 등록되었습니다.\")\r\n               \r\n            }\r\n           \r\n        },\r\n        data: () => {\r\n            return {\r\n                isSubmit: false,\r\n                error:{\r\n                    comment:false\r\n                },\r\n                nick:'',\r\n                nickname : '',\r\n                num:0,\r\n                intro:'',\r\n                auth:1,\r\n                email:'', \r\n                follower:0,\r\n                following:0,\r\n                isfollow:0,\r\n                like:[],\r\n                coment:[],\r\n                todolist:[],\r\n                newcomment: \"\",\r\n                myEmail:'',\r\n                feeds: 0,\r\n                post : [],\r\n                commentNum:'',\r\n                userAlarmCount: 0,\r\n                likelist:[],\r\n                mynum:0,\r\n                \r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\np {\r\n\r\n    margin-left:5px;\r\n    color: gray;\r\n    font-size:12px;\r\n}\r\n</style>"]}]}