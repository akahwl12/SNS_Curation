{"remainingRequest":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\views\\user\\EmailConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\src\\views\\user\\EmailConfirm.vue","mtime":1580283108640},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\multicampus\\Desktop\\Sub PJT II\\s02p12b103\\fooddeuk\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgJy4uLy4uL2Fzc2V0cy9jc3Mvc3R5bGUuc2NzcycKaW1wb3J0ICcuLi8uLi9hc3NldHMvY3NzL3VzZXIuc2NzcycKaW1wb3J0ICogYXMgRW1haWxWYWxpZGF0b3IgZnJvbSAnZW1haWwtdmFsaWRhdG9yJzsKaW1wb3J0IFVzZXJBcGkgZnJvbSAnLi4vLi4vYXBpcy9Vc2VyQXBpJwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiCgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhOiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZW1haWw6JycsCiAgICAgICAgICAgIGtleTogJycsCiAgICAgICAgICAgIGlzU3VibWl0OiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewoKICAgICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmVtYWlsICE9IG51bGwpIHsKICAgICAgICAgICAgdGhpcy5lbWFpbCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5lbWFpbDsKICAgICAgICB9CgogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAga2V5OiBmdW5jdGlvbiAodikgewogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmtleS5sZW5ndGgpCiAgICAgICAgICAgIHRoaXMuY2hlY2tGb3JtKCk7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBjaGVja0Zvcm0oKSB7CiAgICAgICAgICAgIGxldCBpc1N1Ym1pdCA9IHRydWU7CgogICAgICAgICAgICBpZih0aGlzLmtleS5sZW5ndGghPTApIHsKICAgICAgICAgICAgICAgIGlzU3VibWl0ID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlzU3VibWl0ID0gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuaXNTdWJtaXQgPSBpc1N1Ym1pdDsKICAgICAgICB9LAogICAgICAgIHN1Ym1pdCgpIHsKICAgICAgICAgICAgaWYgKHRoaXMuaXNTdWJtaXQpIHsKICAgICAgICAgICAgICAgIC8v7JqU7LKtIO2bhOyXkOuKlCDrsoTtirwg67mE7Zmc7ISx7ZmUCiAgICAgICAgICAgICAgICB0aGlzLmlzU3VibWl0ID0gZmFsc2U7CgogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwsCiAgICAgICAgICAgICAgICAgICAga2V5OnRoaXMua2V5CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIFVzZXJBcGkucmVxdWVzdEVtYWlsQ29uZmlybShkYXRhLCByZXMgPT4gewogICAgICAgICAgICAgICAgICAgIC8vIGFsZXJ0KCJyZXMg6rCSIDogIiArIHJlcykKICAgICAgICAgICAgICAgICAgICBpZiAocmVzID09PSAnc3VjY2VzcycpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJvdXRlciA9IHRoaXMuJHJvdXRlcjsKICAgICAgICAgICAgICAgICAgICAgICAgcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIkxvZ2luIgogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoIuydtOuplOydvCDsnbjspp3snbQg7JmE66OM65CY7JeI7Iq164uI64ukLiIpCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoIu2CpCDqsJLsnbQg7J287LmY7ZWY7KeAIOyViuyKteuLiOuLpC4iKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy/thrXsi6DsnYQg7Ya17ZW0IOyghOuLrOuwm+ydgCDqsJIg7L2Y7IaU7JeQIOy2nOugpSBjb25zb2xlLmxvZyhyZXMpOyDsmpTssq3snbQg64Gd64KY66m0IOuyhO2KvCDtmZzshLHtmZQKICAgICAgICAgICAgICAgICAgICB0aGlzLmlzU3VibWl0ID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0sIGVycm9yID0+IHsKICAgICAgICAgICAgICAgICAgICAvL+yalOyyreydtCDrgZ3rgpjrqbQg67KE7Yq8IO2ZnOyEse2ZlAogICAgICAgICAgICAgICAgICAgIHZhciByb3V0ZXIgPSB0aGlzLiRyb3V0ZXI7CgogICAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIkVycm9yUGFnZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczp7cm91dGU6dGhpcy4kcm91dGUubmFtZX0KICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdvQmFjaygpIHsKICAgICAgICAgICAgdmFyIHJvdXRlciA9IHRoaXMuJHJvdXRlcjsKICAgICAgICAgICAgcm91dGVyLmdvKC0xKQogICAgICAgIH0sCiAgICAgICAgc2VuZEVtYWlsKCkgewogICAgICAgICAgICB2YXIgcm91dGVyID0gdGhpcy4kcm91dGVyOwoKICAgICAgICAgICAgbGV0IGRhdGEgPSB7ZW1haWwgOiB0aGlzLmVtYWlsfTsKCiAgICAgICAgICAgIFVzZXJBcGkucmVxdWVzdFNlbmRFbWFpbChkYXRhLCByZXMgPT4gewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCJTZW5kRW1haWwiKQogICAgICAgICAgICAgICAgfSwgZXJyb3IgPT4gewogICAgICAgICAgICAgICAgICAgIC8v7JqU7LKt7J20IOuBneuCmOuptCDrsoTtirwg7Zmc7ISx7ZmUCiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdXRlciA9IHRoaXMuJHJvdXRlcjsKICAgICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJFcnJvclBhZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6e3JvdXRlOnRoaXMuJHJvdXRlLm5hbWV9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KQoKICAgICAgICAgICAgcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogIlNlbmRFbWFpbCIsCiAgICAgICAgICAgICAgICBwYXJhbXM6e2VtYWlsOnRoaXMuZW1haWx9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0KCn0K"},{"version":3,"sources":["EmailConfirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"EmailConfirm.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div class=\"user\" id=\"login\">\r\n        <div class=\"header\" style=\"width:100%; height:40px\">\r\n            <div style=\"float:left;\">\r\n            <button v-on:click=\"goBack\">\r\n                <img src=\"../../assets/images/backIcon.png\" style=\"width:40px;\">\r\n            </button>\r\n            </div>\r\n            <p style=\"vertical-align: middle;padding: 8px 5px;float:left;\">이메일 인증</p>\r\n        </div>\r\n        <div class=\"wrapC\">\r\n            <h1>인증이 완료되지 않은 이메일입니다.</h1>\r\n            <h1 style=\"margin-top:10%\">가입하신 이메일을 입력해주세요</h1>\r\n            <h1>이메일로 인증 이메일을 발송해드립니다</h1>\r\n            <br/>\r\n            <div>\r\n                <div>\r\n                    <v-text-field label=\"인증 Key 입력\" hide-details=\"\"\r\n                    v-model=\"key\"\r\n                    @keyup.enter=\"submit\"\r\n                    style=\"color:blue\"\r\n                    id=\"email\"></v-text-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"btn_wrap\">\r\n                <button\r\n                    class=\"btn btn--back btn--ok\"\r\n                    v-on:click=\"submit\"\r\n                    :disabled=\"!isSubmit\"\r\n                    :class=\"{disabled : !isSubmit}\">\r\n                    인증하기\r\n                </button>\r\n                <button\r\n                    class=\"btn btn--back\"\r\n                    style=\"background-color:black; color:white;\"\r\n                    v-on:click=\"sendEmail\">\r\n                    메일이 도착하지 않았나요?\r\n                </button>\r\n                <router-link v-bind:to=\"{name:'Login'}\">\r\n                    <button class=\"btn btn--cancel\">\r\n                        취소\r\n                    </button>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import '../../assets/css/style.scss'\r\n    import '../../assets/css/user.scss'\r\n    import * as EmailValidator from 'email-validator';\r\n    import UserApi from '../../apis/UserApi'\r\n    import axios from \"axios\"\r\n\r\n    export default {\r\n        data: () => {\r\n            return {\r\n                email:'',\r\n                key: '',\r\n                isSubmit: false\r\n            }\r\n        },\r\n        created() {\r\n\r\n            if (this.$route.params.email != null) {\r\n                this.email = this.$route.params.email;\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            key: function (v) {\r\n                console.log(this.key.length)\r\n                this.checkForm();\r\n            }\r\n        },\r\n        methods: {\r\n            checkForm() {\r\n                let isSubmit = true;\r\n\r\n                if(this.key.length!=0) {\r\n                    isSubmit = true;\r\n                } else {\r\n                    isSubmit = false;\r\n                }\r\n\r\n                this.isSubmit = isSubmit;\r\n            },\r\n            submit() {\r\n                if (this.isSubmit) {\r\n                    //요청 후에는 버튼 비활성화\r\n                    this.isSubmit = false;\r\n\r\n                    let data = {\r\n                        email: this.email,\r\n                        key:this.key\r\n                    }\r\n                    \r\n                    UserApi.requestEmailConfirm(data, res => {\r\n                        // alert(\"res 값 : \" + res)\r\n                        if (res === 'success') {\r\n                            var router = this.$router;\r\n                            router.push({\r\n                                name: \"Login\"\r\n                            });\r\n                            alert(\"이메일 인증이 완료되었습니다.\")\r\n                        } else {\r\n                            alert(\"키 값이 일치하지 않습니다.\");\r\n                        }\r\n                        //통신을 통해 전달받은 값 콘솔에 출력 console.log(res); 요청이 끝나면 버튼 활성화\r\n                        this.isSubmit = true;\r\n                    }, error => {\r\n                        //요청이 끝나면 버튼 활성화\r\n                        var router = this.$router;\r\n\r\n                        router.push({\r\n                            name: \"ErrorPage\",\r\n                            params:{route:this.$route.name}\r\n                        });\r\n                    })\r\n                }\r\n            },\r\n            goBack() {\r\n                var router = this.$router;\r\n                router.go(-1)\r\n            },\r\n            sendEmail() {\r\n                var router = this.$router;\r\n\r\n                let data = {email : this.email};\r\n\r\n                UserApi.requestSendEmail(data, res => {\r\n                        alert(\"SendEmail\")\r\n                    }, error => {\r\n                        //요청이 끝나면 버튼 활성화\r\n                        var router = this.$router;\r\n                        router.push({\r\n                            name: \"ErrorPage\",\r\n                            params:{route:this.$route.name}\r\n                        });\r\n                    })\r\n\r\n                router.push({\r\n                    name: \"SendEmail\",\r\n                    params:{email:this.email}\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n</script>"]}]}